import{_ as n,c as o,j as s,a as i,G as t,a5 as l,B as p,o as d}from"./chunks/framework.DE-bCy2X.js";const pe=JSON.parse('{"title":"API documentation","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),r={name:"api.md"},c={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""},ee={class:"jldocstring custom-block",open:""};function se(ie,e,ae,te,le,ne){const a=p("Badge");return d(),o("div",null,[e[141]||(e[141]=s("h1",{id:"API-documentation",tabindex:"-1"},[i("API documentation "),s("a",{class:"header-anchor",href:"#API-documentation","aria-label":'Permalink to "API documentation {#API-documentation}"'},"​")],-1)),e[142]||(e[142]=s("h2",{id:"constants",tabindex:"-1"},[i("Constants "),s("a",{class:"header-anchor",href:"#constants","aria-label":'Permalink to "Constants"'},"​")],-1)),s("details",c,[s("summary",null,[e[0]||(e[0]=s("a",{id:"MakieTeX.RENDER_DENSITY",href:"#MakieTeX.RENDER_DENSITY"},[s("span",{class:"jlbinding"},"MakieTeX.RENDER_DENSITY")],-1)),e[1]||(e[1]=i()),t(a,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),e[2]||(e[2]=s("p",null,"Default density when rendering images",-1)),e[3]||(e[3]=s("p",null,[s("a",{href:"https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/MakieTeX.jl#L27",target:"_blank",rel:"noreferrer"},"source")],-1))]),s("details",h,[s("summary",null,[e[4]||(e[4]=s("a",{id:"MakieTeX.RENDER_EXTRASAFE",href:"#MakieTeX.RENDER_EXTRASAFE"},[s("span",{class:"jlbinding"},"MakieTeX.RENDER_EXTRASAFE")],-1)),e[5]||(e[5]=i()),t(a,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),e[6]||(e[6]=s("p",null,"Render with Poppler pipeline (true) or Cairo pipeline (false)",-1)),e[7]||(e[7]=s("p",null,[s("a",{href:"https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/MakieTeX.jl#L21",target:"_blank",rel:"noreferrer"},"source")],-1))]),s("details",k,[s("summary",null,[e[8]||(e[8]=s("a",{id:"MakieTeX.CURRENT_TEX_ENGINE",href:"#MakieTeX.CURRENT_TEX_ENGINE"},[s("span",{class:"jlbinding"},"MakieTeX.CURRENT_TEX_ENGINE")],-1)),e[9]||(e[9]=i()),t(a,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),e[10]||(e[10]=s("p",null,[i("The current "),s("code",null,"TeX"),i(" engine which MakieTeX uses.")],-1)),e[11]||(e[11]=s("p",null,[s("a",{href:"https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/MakieTeX.jl#L23",target:"_blank",rel:"noreferrer"},"source")],-1))]),s("details",u,[s("summary",null,[e[12]||(e[12]=s("a",{id:"MakieTeX._PDFCROP_DEFAULT_MARGINS",href:"#MakieTeX._PDFCROP_DEFAULT_MARGINS"},[s("span",{class:"jlbinding"},"MakieTeX._PDFCROP_DEFAULT_MARGINS")],-1)),e[13]||(e[13]=i()),t(a,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),e[14]||(e[14]=s("p",null,[i("Default margins for "),s("code",null,"pdfcrop"),i(". Private, try not to touch!")],-1)),e[15]||(e[15]=s("p",null,[s("a",{href:"https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/MakieTeX.jl#L25",target:"_blank",rel:"noreferrer"},"source")],-1))]),e[143]||(e[143]=s("h2",{id:"interfaces",tabindex:"-1"},[i("Interfaces "),s("a",{class:"header-anchor",href:"#interfaces","aria-label":'Permalink to "Interfaces"'},"​")],-1)),e[144]||(e[144]=s("h3",{id:"AbstractDocument",tabindex:"-1"},[s("code",null,"AbstractDocument"),i(),s("a",{class:"header-anchor",href:"#AbstractDocument","aria-label":'Permalink to "`AbstractDocument` {#AbstractDocument}"'},"​")],-1)),s("details",g,[s("summary",null,[e[16]||(e[16]=s("a",{id:"MakieTeX.AbstractDocument",href:"#MakieTeX.AbstractDocument"},[s("span",{class:"jlbinding"},"MakieTeX.AbstractDocument")],-1)),e[17]||(e[17]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[18]||(e[18]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractDocument</span></span></code></pre></div><p>An <code>AbstractDocument</code> must contain a document as a String or Vector{UInt8} of the full contents of whichever file it is using. It may contain additional fields - for example, <code>PDFDocument</code>s contain a page number to indicate which page to display, in the case where a PDF has multiple pages.</p><p><code>AbstractDocument</code>s must implement the following functions:</p><ul><li><p><code>getdoc(doc::AbstractDocument)::Union{Vector{UInt8}, String}</code></p></li><li><p><code>mimetype(doc::AbstractDocument)::Base.MIME</code></p></li><li><p><code>Cached(doc::AbstractDocument)::AbstractCachedDocument</code></p></li></ul><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L19-L30" target="_blank" rel="noreferrer">source</a></p>',5))]),s("details",b,[s("summary",null,[e[19]||(e[19]=s("a",{id:"MakieTeX.getdoc",href:"#MakieTeX.getdoc"},[s("span",{class:"jlbinding"},"MakieTeX.getdoc")],-1)),e[20]||(e[20]=i()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[21]||(e[21]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getdoc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(doc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Vector{UInt8}, String}</span></span></code></pre></div><p>Return the document data (contents of the file) as a <code>Vector{UInt8}</code> or <code>String</code>. This must be the full file, i.e., if it was saved, the file should be immediately openable.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L33-L38" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",y,[s("summary",null,[e[22]||(e[22]=s("a",{id:"MakieTeX.mimetype",href:"#MakieTeX.mimetype"},[s("span",{class:"jlbinding"},"MakieTeX.mimetype")],-1)),e[23]||(e[23]=i()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[24]||(e[24]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mimetype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{&lt;: AbstractDocument}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Base.MIME</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mimetype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Base.MIME</span></span></code></pre></div><p>Return the MIME type of the document. For example, <code>mimetype(::SVGDocument) == MIME(&quot;image/svg+xml&quot;)</code>.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>This is generally defined for the type, and there is a generic overload when passing a constructed object.</p></div><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L40-L49" target="_blank" rel="noreferrer">source</a></p>`,4))]),s("details",m,[s("summary",null,[e[25]||(e[25]=s("a",{id:"MakieTeX.Cached",href:"#MakieTeX.Cached"},[s("span",{class:"jlbinding"},"MakieTeX.Cached")],-1)),e[26]||(e[26]=i()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[27]||(e[27]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Cached</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(doc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCachedDocument</span></span></code></pre></div><p>Generic interface to cache a document and return it.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L51-L55" target="_blank" rel="noreferrer">source</a></p>',3))]),e[145]||(e[145]=s("h3",{id:"AbstractCachedDocument",tabindex:"-1"},[s("code",null,"AbstractCachedDocument"),i(),s("a",{class:"header-anchor",href:"#AbstractCachedDocument","aria-label":'Permalink to "`AbstractCachedDocument` {#AbstractCachedDocument}"'},"​")],-1)),s("details",f,[s("summary",null,[e[28]||(e[28]=s("a",{id:"MakieTeX.AbstractCachedDocument",href:"#MakieTeX.AbstractCachedDocument"},[s("span",{class:"jlbinding"},"MakieTeX.AbstractCachedDocument")],-1)),e[29]||(e[29]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[30]||(e[30]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractCachedDocument</span></span></code></pre></div><p>Cached documents are &quot;loaded&quot; versions of AbstractDocuments, and store a pointer/reference to the loaded version of the document (a Poppler handle for PDFs, or Rsvg handle for SVGs).</p><p>They also contain a Cairo surface to which the document has been rendered, as well as a cache of a rasterized PNG and its scale for performance reasons. See the documentation of <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.rasterize"><code>rasterize</code></a> for more.</p><p><code>AbstractCachedDocument</code>s must implement the <a href="/MakieTeX.jl/previews/PR61/api#AbstractDocument"><code>AbstractDocument</code></a> API, as well as the following:</p><ul><li><p><code>rasterize(doc::AbstractCachedDocument, [scale::Real = 1])::Matrix{ARGB32}</code></p></li><li><p><code>draw_to_cairo_surface(doc::AbstractCachedDocument, surf::CairoSurface)</code></p></li><li><p><code>update_handle!(doc::AbstractCachedDocument)::&lt;some_handle_type&gt;</code></p></li></ul><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L58-L72" target="_blank" rel="noreferrer">source</a></p>',6))]),s("details",E,[s("summary",null,[e[31]||(e[31]=s("a",{id:"MakieTeX.rasterize",href:"#MakieTeX.rasterize"},[s("span",{class:"jlbinding"},"MakieTeX.rasterize")],-1)),e[32]||(e[32]=i()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[33]||(e[33]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rasterize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(doc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCachedDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, scale</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Render a <code>CachedDocument</code> to an image at a given scale. This is a convenience function which calls the appropriate rendering function for the document type. Returns an image as a <code>Matrix{ARGB32}</code>.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L76-L81" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",T,[s("summary",null,[e[34]||(e[34]=s("a",{id:"MakieTeX.draw_to_cairo_surface",href:"#MakieTeX.draw_to_cairo_surface"},[s("span",{class:"jlbinding"},"MakieTeX.draw_to_cairo_surface")],-1)),e[35]||(e[35]=i()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[36]||(e[36]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">draw_to_cairo_surface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(doc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCachedDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, surf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CairoSurface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Render a <code>CachedDocument</code> to a Cairo surface. This is a convenience function which calls the appropriate rendering function for the document type.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L84-L89" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",C,[s("summary",null,[e[37]||(e[37]=s("a",{id:"MakieTeX.update_handle!",href:"#MakieTeX.update_handle!"},[s("span",{class:"jlbinding"},"MakieTeX.update_handle!")],-1)),e[38]||(e[38]=i()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[39]||(e[39]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_handle!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(doc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCachedDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Update the internal handle/pointer to the loaded document in a <code>CachedDocument</code>, and returns it.</p><p>This function is used to refresh the handle/pointer to the loaded document in case it has been garbage collected or invalidated. It should return the updated handle/pointer.</p><p>For example, in <code>CachedPDF</code>, this function would reload the PDF document using the <code>doc.doc</code> field and update the <code>ptr</code> field with the new Poppler handle, <strong>if it is found to be invalid</strong>.</p><p>Note that this function needs to be implemented for each concrete subtype of <code>AbstractCachedDocument</code>, as the handle/pointer type and the method to load/update it will be different for different document types (e.g., PDF, SVG, etc.).</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L92-L106" target="_blank" rel="noreferrer">source</a></p>',6))]),e[146]||(e[146]=s("h2",{id:"Document-types",tabindex:"-1"},[i("Document types "),s("a",{class:"header-anchor",href:"#Document-types","aria-label":'Permalink to "Document types {#Document-types}"'},"​")],-1)),e[147]||(e[147]=s("h3",{id:"Raw-document-types",tabindex:"-1"},[i("Raw document types "),s("a",{class:"header-anchor",href:"#Raw-document-types","aria-label":'Permalink to "Raw document types {#Raw-document-types}"'},"​")],-1)),s("details",j,[s("summary",null,[e[40]||(e[40]=s("a",{id:"MakieTeX.SVGDocument",href:"#MakieTeX.SVGDocument"},[s("span",{class:"jlbinding"},"MakieTeX.SVGDocument")],-1)),e[41]||(e[41]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[42]||(e[42]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SVGDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(svg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A document type which stores an SVG string.</p><p>Is converted to <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.CachedSVG"><code>CachedSVG</code></a> for use in plotting.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L154-L160" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",F,[s("summary",null,[e[43]||(e[43]=s("a",{id:"MakieTeX.PDFDocument",href:"#MakieTeX.PDFDocument"},[s("span",{class:"jlbinding"},"MakieTeX.PDFDocument")],-1)),e[44]||(e[44]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[45]||(e[45]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PDFDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pdf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>A document type which holds a raw PDF as a string.</p><p>Is converted to <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.CachedPDF"><code>CachedPDF</code></a> for use in plotting.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L168-L174" target="_blank" rel="noreferrer">source</a></p>',4))]),e[148]||(e[148]=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"Missing docstring."),s("p",null,[i("Missing docstring for "),s("code",null,"EPSDocument"),i(". Check Documenter's build log for details.")])],-1)),s("details",M,[s("summary",null,[e[46]||(e[46]=s("a",{id:"MakieTeX.TEXDocument",href:"#MakieTeX.TEXDocument"},[s("span",{class:"jlbinding"},"MakieTeX.TEXDocument")],-1)),e[47]||(e[47]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[48]||(e[48]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TEXDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, add_defaults</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; requires, preamble, class, classoptions)</span></span></code></pre></div><p>This constructor function creates a <code>struct</code> of type <code>TEXDocument</code> which can be passed to <code>teximg</code>. All arguments are to be passed as strings.</p><p>If <code>add_defaults</code> is <code>false</code>, then we will <em>not</em> automatically add document structure. Note that in this case, keyword arguments will be disregarded and <code>contents</code> must be a complete LaTeX document.</p><p>Available keyword arguments are:</p><ul><li><p><code>requires</code>: code which comes before <code>documentclass</code> in the preamble. Default: <code>raw&quot;\\RequirePackage{luatex85}&quot;</code>.</p></li><li><p><code>class</code>: the document class. Default (and what you should use): <code>&quot;standalone&quot;</code>.</p></li><li><p><code>classoptions</code>: the options you should pass to the class, i.e., <code>\\documentclass[$classoptions]{$class}</code>. Default: <code>&quot;preview, tightpage, 12pt&quot;</code>.</p></li><li><p><code>preamble</code>: arbitrary code for the preamble (between <code>\\documentclass</code> and <code>\\begin{document}</code>). Default: <code>raw&quot;\\usepackage{amsmath, xcolor} \\pagestyle{empty}&quot;</code>.</p></li></ul><p>See also <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.CachedTEX"><code>CachedTEX</code></a>, <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.compile_latex-Tuple{AbstractString}"><code>compile_latex</code></a>, etc.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L213-L230" target="_blank" rel="noreferrer">source</a></p>',7))]),s("details",v,[s("summary",null,[e[49]||(e[49]=s("a",{id:"MakieTeX.TypstDocument",href:"#MakieTeX.TypstDocument"},[s("span",{class:"jlbinding"},"MakieTeX.TypstDocument")],-1)),e[50]||(e[50]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[51]||(e[51]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TypstDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, add_defaults</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; preamble)</span></span></code></pre></div><p>This constructor function creates a <code>struct</code> of type <code>TypstDocument</code>. All arguments are to be passed as strings.</p><p>If <code>add_defaults</code> is <code>false</code>, then we will <em>not</em> automatically add document structure. Note that in this case, keyword arguments will be disregarded and <code>contents</code> must be a complete Typst document.</p><p>Available keyword arguments are:</p><ul><li><code>preamble</code>: arbitrary code inserted prior to the <code>contents</code>. Default: <code>&quot;&quot;</code>.</li></ul><p>See also <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.CachedTypst"><code>CachedTypst</code></a>, <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.compile_typst-Tuple{AbstractString}"><code>compile_typst</code></a>, etc.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L289-L303" target="_blank" rel="noreferrer">source</a></p>',7))]),e[149]||(e[149]=s("h3",{id:"Cached-document-types",tabindex:"-1"},[i("Cached document types "),s("a",{class:"header-anchor",href:"#Cached-document-types","aria-label":'Permalink to "Cached document types {#Cached-document-types}"'},"​")],-1)),s("details",X,[s("summary",null,[e[52]||(e[52]=s("a",{id:"MakieTeX.CachedTEX",href:"#MakieTeX.CachedTEX"},[s("span",{class:"jlbinding"},"MakieTeX.CachedTEX")],-1)),e[53]||(e[53]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[54]||(e[54]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CachedTEX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(doc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TEXDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compile a <code>TEXDocument</code>, compile it and return the cached TeX object.</p><p>A <code>CachedTEX</code> struct stores the document and its compiled form, as well as some pointers to in-program versions of it. It also stores the page dimensions.</p><p>In <code>kwargs</code>, one can pass anything which goes to the internal function <code>compile_latex</code>. These are primarily:</p><ul><li><p><code>engine =</code>lualatex<code>/</code>xelatex<code>/...</code>: the LaTeX engine to use when rendering</p></li><li><p><code>options=</code>-file-line-error``: the options to pass to<code>latexmk</code>.</p></li></ul><p>The constructor stores the following fields:</p><ul><li><p><code>doc</code></p></li><li><p><code>pdf</code></p></li><li><p><code>ptr</code></p></li><li><p><code>surf</code></p></li><li><p><code>dims</code></p></li></ul><div class="tip custom-block"><p class="custom-block-title">Note</p><p>This is a <code>mutable struct</code> because the pointer to the Poppler handle can change. TODO: make this an immutable struct with a Ref to the handle?? OR maybe even the surface itself...</p></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p>It is also possible to manually construct a <code>CachedTEX</code> with <code>nothing</code> in the <code>doc</code> field, if you just want to insert a pre-rendered PDF into your figure.</p></div><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L436-L459" target="_blank" rel="noreferrer">source</a></p>',10))]),s("details",D,[s("summary",null,[e[55]||(e[55]=s("a",{id:"MakieTeX.CachedTypst",href:"#MakieTeX.CachedTypst"},[s("span",{class:"jlbinding"},"MakieTeX.CachedTypst")],-1)),e[56]||(e[56]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[57]||(e[57]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CachedTypst</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(doc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TypstDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compile a <code>TypstDocument</code>, compile it and return the cached Typst object.</p><p>A <code>CachedTypst</code> struct stores the document and its compiled form, as well as some pointers to in-program versions of it. It also stores the page dimensions.</p><p>The constructor stores the following fields:</p><ul><li><p><code>doc</code></p></li><li><p><code>pdf</code></p></li><li><p><code>ptr</code></p></li><li><p><code>surf</code></p></li><li><p><code>dims</code></p></li></ul><div class="tip custom-block"><p class="custom-block-title">Note</p><p>This is a <code>mutable struct</code> because the pointer to the Poppler handle can change. TODO: make this an immutable struct with a Ref to the handle?? OR maybe even the surface itself...</p></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p>It is also possible to manually construct a <code>CachedTypst</code> with <code>nothing</code> in the <code>doc</code> field, if you just want to insert a pre-rendered PDF into your figure.</p></div><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L495-L513" target="_blank" rel="noreferrer">source</a></p>',8))]),s("details",A,[s("summary",null,[e[58]||(e[58]=s("a",{id:"MakieTeX.CachedPDF",href:"#MakieTeX.CachedPDF"},[s("span",{class:"jlbinding"},"MakieTeX.CachedPDF")],-1)),e[59]||(e[59]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[60]||(e[60]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CachedPDF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pdf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PDFDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Holds a PDF document along with a Poppler handle and a Cairo surface to which it has already been rendered.</p><p><strong>Usage</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CachedPDF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;path/to/pdf.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), [page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CachedPDF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;path/to/pdf.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String), [page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CachedPDF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PDFDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), [page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p><strong>Fields</strong></p><ul><li><p><code>doc</code>: A reference to the <code>PDFDocument</code> which is cached here.</p></li><li><p><code>ptr</code>: A pointer to the Poppler handle of the PDF. May be randomly GC&#39;ed by Poppler.</p></li><li><p><code>dims</code>: The dimensions of the PDF page in points, for ease of access.</p></li><li><p><code>surf</code>: A Cairo surface to which Poppler has drawn the PDF. Permanent and cached.</p></li><li><p><code>image_cache</code>: A cache for a (rendered_image, scale_factor) pair. This is used to avoid re-rendering the PDF.</p></li></ul><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L340-L358" target="_blank" rel="noreferrer">source</a></p>`,7))]),s("details",x,[s("summary",null,[e[61]||(e[61]=s("a",{id:"MakieTeX.CachedSVG",href:"#MakieTeX.CachedSVG"},[s("span",{class:"jlbinding"},"MakieTeX.CachedSVG")],-1)),e[62]||(e[62]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[63]||(e[63]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CachedSVG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(svg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SVGDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Holds an SVG document along with an Rsvg handle and a Cairo surface to which it has already been rendered.</p><p><strong>Usage</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CachedSVG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;path/to/svg.svg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CachedSVG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;path/to/svg.svg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CachedSVG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SVGDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><strong>Fields</strong></p><ul><li><p><code>doc</code>: The original <code>SVGDocument</code> which is cached here, i.e., the text of that SVG.</p></li><li><p><code>handle</code>: A pointer to the Rsvg handle of the SVG. May be randomly GC&#39;ed by Rsvg, so is stored as a <code>Ref</code> in case it has to be refreshed.</p></li><li><p><code>dims</code>: The dimensions of the SVG in points, for ease of access.</p></li><li><p><code>surf</code>: A Cairo surface to which Rsvg has drawn the SVG. Permanent and cached.</p></li><li><p><code>image_cache</code>: A cache for a (rendered_image, scale_factor) pair. This is used to avoid re-rendering the PDF.</p></li></ul><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L380-L397" target="_blank" rel="noreferrer">source</a></p>`,7))]),e[150]||(e[150]=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"Missing docstring."),s("p",null,[i("Missing docstring for "),s("code",null,"CachedEPS"),i(". Check Documenter's build log for details.")])],-1)),e[151]||(e[151]=s("p",null,[i("TODO: add documentation about the LaTeX ("),s("code",null,"compile_latex"),i("), PDF and SVG handling utils here, in case they are of use to anyone.")],-1)),e[152]||(e[152]=s("h2",{id:"All-other-methods-and-functions",tabindex:"-1"},[i("All other methods and functions "),s("a",{class:"header-anchor",href:"#All-other-methods-and-functions","aria-label":'Permalink to "All other methods and functions {#All-other-methods-and-functions}"'},"​")],-1)),s("details",w,[s("summary",null,[e[64]||(e[64]=s("a",{id:"MakieTeX.CachedTEX-Tuple{TEXDocument}",href:"#MakieTeX.CachedTEX-Tuple{TEXDocument}"},[s("span",{class:"jlbinding"},"MakieTeX.CachedTEX")],-1)),e[65]||(e[65]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[66]||(e[66]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CachedTEX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(doc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TEXDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compile a <code>TEXDocument</code>, compile it and return the cached TeX object.</p><p>A <code>CachedTEX</code> struct stores the document and its compiled form, as well as some pointers to in-program versions of it. It also stores the page dimensions.</p><p>In <code>kwargs</code>, one can pass anything which goes to the internal function <code>compile_latex</code>. These are primarily:</p><ul><li><p><code>engine =</code>lualatex<code>/</code>xelatex<code>/...</code>: the LaTeX engine to use when rendering</p></li><li><p><code>options=</code>-file-line-error``: the options to pass to<code>latexmk</code>.</p></li></ul><p>The constructor stores the following fields:</p><ul><li><p><code>doc</code></p></li><li><p><code>pdf</code></p></li><li><p><code>ptr</code></p></li><li><p><code>surf</code></p></li><li><p><code>dims</code></p></li></ul><div class="tip custom-block"><p class="custom-block-title">Note</p><p>This is a <code>mutable struct</code> because the pointer to the Poppler handle can change. TODO: make this an immutable struct with a Ref to the handle?? OR maybe even the surface itself...</p></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p>It is also possible to manually construct a <code>CachedTEX</code> with <code>nothing</code> in the <code>doc</code> field, if you just want to insert a pre-rendered PDF into your figure.</p></div><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L436-L459" target="_blank" rel="noreferrer">source</a></p>',10))]),s("details",B,[s("summary",null,[e[67]||(e[67]=s("a",{id:"MakieTeX.CachedTypst-Tuple{TypstDocument}",href:"#MakieTeX.CachedTypst-Tuple{TypstDocument}"},[s("span",{class:"jlbinding"},"MakieTeX.CachedTypst")],-1)),e[68]||(e[68]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[69]||(e[69]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CachedTypst</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(doc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TypstDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compile a <code>TypstDocument</code>, compile it and return the cached Typst object.</p><p>A <code>CachedTypst</code> struct stores the document and its compiled form, as well as some pointers to in-program versions of it. It also stores the page dimensions.</p><p>The constructor stores the following fields:</p><ul><li><p><code>doc</code></p></li><li><p><code>pdf</code></p></li><li><p><code>ptr</code></p></li><li><p><code>surf</code></p></li><li><p><code>dims</code></p></li></ul><div class="tip custom-block"><p class="custom-block-title">Note</p><p>This is a <code>mutable struct</code> because the pointer to the Poppler handle can change. TODO: make this an immutable struct with a Ref to the handle?? OR maybe even the surface itself...</p></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p>It is also possible to manually construct a <code>CachedTypst</code> with <code>nothing</code> in the <code>doc</code> field, if you just want to insert a pre-rendered PDF into your figure.</p></div><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L495-L513" target="_blank" rel="noreferrer">source</a></p>',8))]),s("details",P,[s("summary",null,[e[70]||(e[70]=s("a",{id:"MakieTeX.EPSDocument",href:"#MakieTeX.EPSDocument"},[s("span",{class:"jlbinding"},"MakieTeX.EPSDocument")],-1)),e[71]||(e[71]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[72]||(e[72]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EPSDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(eps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>A document type which holds an EPS string.</p><p>Is converted to <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.CachedPDF"><code>CachedPDF</code></a> for use in plotting.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L185-L191" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",O,[s("summary",null,[e[73]||(e[73]=s("a",{id:"MakieTeX.LTeX",href:"#MakieTeX.LTeX"},[s("span",{class:"jlbinding"},"MakieTeX.LTeX")],-1)),e[74]||(e[74]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[75]||(e[75]=l('<p><strong><code>MakieTeX.LTeX &lt;: Block</code></strong></p><p>No docstring defined.</p><p><strong>Attributes</strong></p><p>(type <code>?MakieTeX.LTeX.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>halign</code>, <code>height</code>, <code>padding</code>, <code>render_density</code>, <code>rotation</code>, <code>scale</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>tex</code>, <code>valign</code>, <code>visible</code>, <code>width</code></p><p><a href="https://github.com/MakieOrg/Makie.jl/blob/v0.21.15/src/makielayout/blocks.jl#L115-L126" target="_blank" rel="noreferrer">source</a></p>',6))]),s("details",S,[s("summary",null,[e[76]||(e[76]=s("a",{id:"MakieTeX.TEXDocument-Tuple{AbstractString, Bool}",href:"#MakieTeX.TEXDocument-Tuple{AbstractString, Bool}"},[s("span",{class:"jlbinding"},"MakieTeX.TEXDocument")],-1)),e[77]||(e[77]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[78]||(e[78]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TEXDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, add_defaults</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; requires, preamble, class, classoptions)</span></span></code></pre></div><p>This constructor function creates a <code>struct</code> of type <code>TEXDocument</code> which can be passed to <code>teximg</code>. All arguments are to be passed as strings.</p><p>If <code>add_defaults</code> is <code>false</code>, then we will <em>not</em> automatically add document structure. Note that in this case, keyword arguments will be disregarded and <code>contents</code> must be a complete LaTeX document.</p><p>Available keyword arguments are:</p><ul><li><p><code>requires</code>: code which comes before <code>documentclass</code> in the preamble. Default: <code>raw&quot;\\RequirePackage{luatex85}&quot;</code>.</p></li><li><p><code>class</code>: the document class. Default (and what you should use): <code>&quot;standalone&quot;</code>.</p></li><li><p><code>classoptions</code>: the options you should pass to the class, i.e., <code>\\documentclass[$classoptions]{$class}</code>. Default: <code>&quot;preview, tightpage, 12pt&quot;</code>.</p></li><li><p><code>preamble</code>: arbitrary code for the preamble (between <code>\\documentclass</code> and <code>\\begin{document}</code>). Default: <code>raw&quot;\\usepackage{amsmath, xcolor} \\pagestyle{empty}&quot;</code>.</p></li></ul><p>See also <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.CachedTEX"><code>CachedTEX</code></a>, <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.compile_latex-Tuple{AbstractString}"><code>compile_latex</code></a>, etc.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L213-L230" target="_blank" rel="noreferrer">source</a></p>',7))]),s("details",R,[s("summary",null,[e[79]||(e[79]=s("a",{id:"MakieTeX.TypstDocument-Tuple{AbstractString, Bool}",href:"#MakieTeX.TypstDocument-Tuple{AbstractString, Bool}"},[s("span",{class:"jlbinding"},"MakieTeX.TypstDocument")],-1)),e[80]||(e[80]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[81]||(e[81]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TypstDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, add_defaults</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; preamble)</span></span></code></pre></div><p>This constructor function creates a <code>struct</code> of type <code>TypstDocument</code>. All arguments are to be passed as strings.</p><p>If <code>add_defaults</code> is <code>false</code>, then we will <em>not</em> automatically add document structure. Note that in this case, keyword arguments will be disregarded and <code>contents</code> must be a complete Typst document.</p><p>Available keyword arguments are:</p><ul><li><code>preamble</code>: arbitrary code inserted prior to the <code>contents</code>. Default: <code>&quot;&quot;</code>.</li></ul><p>See also <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.CachedTypst"><code>CachedTypst</code></a>, <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.compile_typst-Tuple{AbstractString}"><code>compile_typst</code></a>, etc.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L289-L303" target="_blank" rel="noreferrer">source</a></p>',7))]),s("details",L,[s("summary",null,[e[82]||(e[82]=s("a",{id:"MakieTeX._RsvgRectangle",href:"#MakieTeX._RsvgRectangle"},[s("span",{class:"jlbinding"},"MakieTeX._RsvgRectangle")],-1)),e[83]||(e[83]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[84]||(e[84]=s("p",null,"RsvgRectangle is a simple struct of: height::Float64 width::Float64 x::Float64 y::Float64",-1)),e[85]||(e[85]=s("p",null,[s("a",{href:"https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/rendering/svg.jl#L31-L37",target:"_blank",rel:"noreferrer"},"source")],-1))]),s("details",I,[s("summary",null,[e[86]||(e[86]=s("a",{id:"MakieTeX.__init__-Tuple{}",href:"#MakieTeX.__init__-Tuple{}"},[s("span",{class:"jlbinding"},"MakieTeX.__init__")],-1)),e[87]||(e[87]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[88]||(e[88]=s("p",null,"Checks whether the default latex engine is correct",-1)),e[89]||(e[89]=s("p",null,[s("a",{href:"https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/MakieTeX.jl#L70",target:"_blank",rel:"noreferrer"},"source")],-1))]),s("details",N,[s("summary",null,[e[90]||(e[90]=s("a",{id:"MakieTeX.compile_latex-Tuple{AbstractString}",href:"#MakieTeX.compile_latex-Tuple{AbstractString}"},[s("span",{class:"jlbinding"},"MakieTeX.compile_latex")],-1)),e[91]||(e[91]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[92]||(e[92]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">compile_latex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tex_engine </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CURRENT_TEX_ENGINE[], options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `-file-line-error`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compile the given document as a String and return the resulting PDF (also as a String).</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/rendering/tex.jl#L10-L14" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",q,[s("summary",null,[e[93]||(e[93]=s("a",{id:"MakieTeX.compile_typst-Tuple{AbstractString}",href:"#MakieTeX.compile_typst-Tuple{AbstractString}"},[s("span",{class:"jlbinding"},"MakieTeX.compile_typst")],-1)),e[94]||(e[94]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[95]||(e[95]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">compile_typst</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compile the given document as a String and return the resulting PDF (also as a String).</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/rendering/typst.jl#L10-L14" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",G,[s("summary",null,[e[96]||(e[96]=s("a",{id:"MakieTeX.crop_pdf-Tuple{String}",href:"#MakieTeX.crop_pdf-Tuple{String}"},[s("span",{class:"jlbinding"},"MakieTeX.crop_pdf")],-1)),e[97]||(e[97]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[98]||(e[98]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">crop_pdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path; margin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>Crop a PDF file using Ghostscript. This alters the crop box but does not actually remove elements.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/rendering/pdf_utils.jl#L140-L145" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",V,[s("summary",null,[e[99]||(e[99]=s("a",{id:"MakieTeX.get_pdf_bbox-Tuple{String}",href:"#MakieTeX.get_pdf_bbox-Tuple{String}"},[s("span",{class:"jlbinding"},"MakieTeX.get_pdf_bbox")],-1)),e[100]||(e[100]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[101]||(e[101]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_pdf_bbox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path)</span></span></code></pre></div><p>Get the bounding box of a PDF file using Ghostscript. Returns a tuple representing the (xmin, ymin, xmax, ymax) of the bounding box.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/rendering/pdf_utils.jl#L107-L112" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",U,[s("summary",null,[e[102]||(e[102]=s("a",{id:"MakieTeX.handle_render_document-Tuple{Cairo.CairoContext, Rsvg.RsvgHandle, MakieTeX._RsvgRectangle}",href:"#MakieTeX.handle_render_document-Tuple{Cairo.CairoContext, Rsvg.RsvgHandle, MakieTeX._RsvgRectangle}"},[s("span",{class:"jlbinding"},"MakieTeX.handle_render_document")],-1)),e[103]||(e[103]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[104]||(e[104]=s("p",null,"handle_render_document(cr::CairoContext, handle::RsvgHandle, viewport::_RsvgRectangle)",-1)),e[105]||(e[105]=s("p",null,[s("a",{href:"https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/rendering/svg.jl#L45-L47",target:"_blank",rel:"noreferrer"},"source")],-1))]),s("details",_,[s("summary",null,[e[106]||(e[106]=s("a",{id:"MakieTeX.load_pdf-Tuple{String}",href:"#MakieTeX.load_pdf-Tuple{String}"},[s("span",{class:"jlbinding"},"MakieTeX.load_pdf")],-1)),e[107]||(e[107]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[108]||(e[108]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_pdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pdf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ptr{Cvoid}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_pdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pdf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{UInt8}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ptr{Cvoid}</span></span></code></pre></div><p>Loads a PDF file into a Poppler document handle.</p><p>Input may be either a String or a <code>Vector{UInt8}</code>, each representing the PDF file in memory.</p><div class="tip custom-block"><p class="custom-block-title">Warn</p><p>The String input does <strong>NOT</strong> represent a filename!</p></div><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/rendering/pdf.jl#L37-L47" target="_blank" rel="noreferrer">source</a></p>`,5))]),s("details",z,[s("summary",null,[e[109]||(e[109]=s("a",{id:"MakieTeX.page2img-Tuple{Union{CachedPDF, CachedTEX, CachedTypst}, Int64}",href:"#MakieTeX.page2img-Tuple{Union{CachedPDF, CachedTEX, CachedTypst}, Int64}"},[s("span",{class:"jlbinding"},"MakieTeX.page2img")],-1)),e[110]||(e[110]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[111]||(e[111]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">page2img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ct</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{CachedTeX, CachedTypst}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, page</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; scale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, render_density </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Renders the <code>page</code> of the given <code>CachedTeX</code> or <code>CachedTypst</code> object to an image, with the given <code>scale</code> and <code>render_density</code>.</p><p>This function reads the PDF using Poppler and renders it to a Cairo surface, which is then read as an image.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/rendering/pdf.jl#L88-L94" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",$,[s("summary",null,[e[112]||(e[112]=s("a",{id:"MakieTeX.pdf_get_page_size-Tuple{Ptr{Nothing}, Int64}",href:"#MakieTeX.pdf_get_page_size-Tuple{Ptr{Nothing}, Int64}"},[s("span",{class:"jlbinding"},"MakieTeX.pdf_get_page_size")],-1)),e[113]||(e[113]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[114]||(e[114]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pdf_get_page_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ptr{Cvoid}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, page_number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{Float64, Float64}</span></span></code></pre></div><p><code>document</code> must be a Poppler document handle. Returns a tuple of <code>width, height</code>.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/rendering/pdf_utils.jl#L42-L46" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",H,[s("summary",null,[e[115]||(e[115]=s("a",{id:"MakieTeX.pdf_num_pages-Tuple{Ptr{Nothing}}",href:"#MakieTeX.pdf_num_pages-Tuple{Ptr{Nothing}}"},[s("span",{class:"jlbinding"},"MakieTeX.pdf_num_pages")],-1)),e[116]||(e[116]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[117]||(e[117]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pdf_num_pages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ptr{Cvoid}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span></span></code></pre></div><p><code>document</code> must be a Poppler document handle. Returns the number of pages in the document.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/rendering/pdf_utils.jl#L28-L32" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",Y,[s("summary",null,[e[118]||(e[118]=s("a",{id:"MakieTeX.pdf_num_pages-Tuple{String}",href:"#MakieTeX.pdf_num_pages-Tuple{String}"},[s("span",{class:"jlbinding"},"MakieTeX.pdf_num_pages")],-1)),e[119]||(e[119]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[120]||(e[120]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pdf_num_pages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span></span></code></pre></div><p>Returns the number of pages in a PDF file located at <code>filename</code>, using the Poppler executable.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/rendering/pdf_utils.jl#L9-L13" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",W,[s("summary",null,[e[121]||(e[121]=s("a",{id:"MakieTeX.rotatedrect-Union{Tuple{T}, Tuple{GeometryBasics.Rect2{T}, Any}} where T",href:"#MakieTeX.rotatedrect-Union{Tuple{T}, Tuple{GeometryBasics.Rect2{T}, Any}} where T"},[s("span",{class:"jlbinding"},"MakieTeX.rotatedrect")],-1)),e[122]||(e[122]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[123]||(e[123]=s("p",null,[i("Calculate an approximation of a tight rectangle around a 2D rectangle rotated by "),s("code",null,"angle"),i(" radians. This is not perfect but works well enough. Check an A vs X to see the difference.")],-1)),e[124]||(e[124]=s("p",null,[s("a",{href:"https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L609-L612",target:"_blank",rel:"noreferrer"},"source")],-1))]),s("details",J,[s("summary",null,[e[125]||(e[125]=s("a",{id:"MakieTeX.split_pdf-Tuple{Union{String, Vector{UInt8}}}",href:"#MakieTeX.split_pdf-Tuple{Union{String, Vector{UInt8}}}"},[s("span",{class:"jlbinding"},"MakieTeX.split_pdf")],-1)),e[126]||(e[126]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[127]||(e[127]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">split_pdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pdf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Vector{UInt8}, String}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{UInt8}</span></span></code></pre></div><p>Splits a PDF into its constituent pages, returning a Vector of UInt8 arrays, each representing a page.</p><p>The input must be a PDF file, either as a String or as a Vector{UInt8} of the PDF&#39;s bytes.</p><div class="tip custom-block"><p class="custom-block-title">Warn</p><p>The input String does <strong>NOT</strong> represent a filename!</p></div><p>This uses Ghostscript to actually split the PDF and return PDF files. If you just want to render the PDF, use <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.load_pdf-Tuple{String}"><code>load_pdf</code></a> and <a href="/MakieTeX.jl/previews/PR61/api#MakieTeX.page2img-Tuple{Union{CachedPDF, CachedTEX, CachedTypst}, Int64}"><code>page2img</code></a> instead.</p><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/rendering/pdf_utils.jl#L68-L79" target="_blank" rel="noreferrer">source</a></p>',6))]),s("details",K,[s("summary",null,[e[128]||(e[128]=s("a",{id:"MakieTeX.texdoc-Tuple{Any}",href:"#MakieTeX.texdoc-Tuple{Any}"},[s("span",{class:"jlbinding"},"MakieTeX.texdoc")],-1)),e[129]||(e[129]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[130]||(e[130]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">texdoc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A shorthand for <code>TEXDocument(contents, add_defaults=true; kwargs...)</code>.</p><p>Available keyword arguments are:</p><ul><li><p><code>requires</code>: code which comes before <code>documentclass</code> in the preamble. Default: <code>raw&quot;\\RequirePackage{luatex85}&quot;</code>.</p></li><li><p><code>class</code>: the document class. Default (and what you should use): <code>&quot;standalone&quot;</code>.</p></li><li><p><code>classoptions</code>: the options you should pass to the class, i.e., <code>\\documentclass[$classoptions]{$class}</code>. Default: <code>&quot;preview, tightpage, 12pt&quot;</code>.</p></li><li><p><code>preamble</code>: arbitrary code for the preamble (between <code>\\documentclass</code> and <code>\\begin{document}</code>). Default: <code>raw&quot;\\usepackage{amsmath, xcolor} \\pagestyle{empty}&quot;</code>.</p></li></ul><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L265-L277" target="_blank" rel="noreferrer">source</a></p>',5))]),s("details",Q,[s("summary",null,[e[131]||(e[131]=s("a",{id:"MakieTeX.teximg-Tuple",href:"#MakieTeX.teximg-Tuple"},[s("span",{class:"jlbinding"},"MakieTeX.teximg")],-1)),e[132]||(e[132]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[133]||(e[133]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">teximg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tex; position, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">teximg!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax_or_scene, tex; position, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This recipe plots rendered <code>TeX</code> to your Figure or Scene.</p><p>There are three types of input you can provide:</p><ul><li><p>Any <code>String</code>, which is rendered to LaTeX cognizant of the figure&#39;s overall theme,</p></li><li><p>A <a href="./@ref"><code>TeXDocument</code></a> object, which is rendered to LaTeX directly, and can be customized by the user,</p></li><li><p>A <a href="./@ref"><code>CachedTeX</code></a> object, which is a pre-rendered LaTeX document.</p></li></ul><p><code>tex</code> may be a single one of these objects, or an array of them.</p><p><strong>Attributes</strong></p><p>Available attributes and their defaults for <code>MakieCore.Plot{MakieTeX.teximg}</code> are:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  align            (:center, :center)</span></span>
<span class="line"><span>  clip_planes      MakieCore.Automatic()</span></span>
<span class="line"><span>  depth_shift      0.0f0</span></span>
<span class="line"><span>  inspectable      true</span></span>
<span class="line"><span>  inspector_clear  MakieCore.Automatic()</span></span>
<span class="line"><span>  inspector_hover  MakieCore.Automatic()</span></span>
<span class="line"><span>  inspector_label  MakieCore.Automatic()</span></span>
<span class="line"><span>  markerspace      :pixel</span></span>
<span class="line"><span>  overdraw         false</span></span>
<span class="line"><span>  position         GeometryBasics.Point{2, Float32}[[0.0, 0.0]]</span></span>
<span class="line"><span>  render_density   2</span></span>
<span class="line"><span>  rotation         Float32[0.0]</span></span>
<span class="line"><span>  scale            1.0</span></span>
<span class="line"><span>  space            :data</span></span>
<span class="line"><span>  ssao             false</span></span>
<span class="line"><span>  transparency     false</span></span>
<span class="line"><span>  visible          true</span></span></code></pre></div><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/recipe.jl#L5-L20" target="_blank" rel="noreferrer">source</a></p>`,9))]),s("details",Z,[s("summary",null,[e[134]||(e[134]=s("a",{id:"MakieTeX.try_tex_engine-Tuple{Cmd}",href:"#MakieTeX.try_tex_engine-Tuple{Cmd}"},[s("span",{class:"jlbinding"},"MakieTeX.try_tex_engine")],-1)),e[135]||(e[135]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[136]||(e[136]=s("p",null,[i("Try to write to "),s("code",null,"engine"),i(" and see what happens")],-1)),e[137]||(e[137]=s("p",null,[s("a",{href:"https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/MakieTeX.jl#L57",target:"_blank",rel:"noreferrer"},"source")],-1))]),s("details",ee,[s("summary",null,[e[138]||(e[138]=s("a",{id:"MakieTeX.typst_doc-Tuple{Any}",href:"#MakieTeX.typst_doc-Tuple{Any}"},[s("span",{class:"jlbinding"},"MakieTeX.typst_doc")],-1)),e[139]||(e[139]=i()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[140]||(e[140]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">typstdoc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A shorthand for <code>TypstDocument(contents, add_defaults=true; kwargs...)</code>.</p><p>Available keyword arguments are:</p><ul><li><code>preamble</code>: arbitrary code inserted prior to the <code>contents</code>. Default: <code>&quot;&quot;</code>.</li></ul><p><a href="https://github.com/MakieOrg/MakieTeX.jl/blob/4480cc28bd27dbdb29e9a5cb9d1a9d53baf70d6c/src/types.jl#L323-L332" target="_blank" rel="noreferrer">source</a></p>',5))])])}const de=n(r,[["render",se]]);export{pe as __pageData,de as default};
